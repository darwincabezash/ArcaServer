{"version":3,"sources":["../../../src/resolvers/personas/personaR.js"],"names":["PersonaR","Query","personaIglesia","_","input","Persona","find","codIglesia","estado","$in","persona","_id","limit","personas","personasEliminadas","personaCantidad","count","Mutation","crearPersona","console","log","nuevaPersona","save","eliminarPersona","escuelaEliminada","findOneAndUpdate","actualizarPersona","findByIdAndUpdate","new"],"mappings":";;;;;;;;;AAAA;;;;AAEO,MAAMA,QAAQ,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACH,UAAMC,cAAN,CAAqBC,CAArB,QAAmC;AAAA,UAAX;AAAEC,QAAAA;AAAF,OAAW;AAC/B,aAAO,MAAMC,iBAAQC,IAAR,CAAa;AAAC,sBAAaF,KAAK,CAACG,UAApB;AAAiCC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,IAAP;AAAP;AAAzC,OAAb,CAAb;AACH,KAHE;;AAIH,UAAMC,OAAN,CAAcP,CAAd,SAA4B;AAAA,UAAX;AAAEC,QAAAA;AAAF,OAAW;AACxB,aAAO,MAAMC,iBAAQC,IAAR,CAAa;AAAC,eAAMF,KAAK,CAACO;AAAb,OAAb,EAAgCC,KAAhC,CAAsC,CAAtC,CAAb;AACH,KANE;;AAOH,UAAMC,QAAN,GAAiB;AACb;AACA,aAAO,MAAMR,iBAAQC,IAAR,CAAa;AAAEE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,IAAP;AAAP;AAAV,OAAb,CAAb;AACH,KAVE;;AAWH,UAAMK,kBAAN,GAA2B;AACvB;AACA,aAAO,MAAMT,iBAAQC,IAAR,CAAa;AAAEE,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP;AAAV,OAAb,CAAb;AACH,KAdE;;AAeH,UAAMM,eAAN,GAAwB;AACpB,aAAO,MAAMV,iBAAQW,KAAR,EAAb;AACH;;AAjBE,GADa;AAmBjBC,EAAAA,QAAQ,EAAE;AACT;AACA,UAAMC,YAAN,CAAmBf,CAAnB,SAAiC;AAAA,UAAX;AAAEC,QAAAA;AAAF,OAAW;AAC7Be,MAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACA,YAAMiB,YAAY,GAAG,IAAIhB,gBAAJ,CAAYD,KAAZ,CAArB;AACA,YAAMiB,YAAY,CAACC,IAAb,EAAN;AACA,aAAOD,YAAP;AACH,KAPQ;;AAUT;AACA,UAAME,eAAN,CAAsBpB,CAAtB,SAAkC;AAAA,UAAT;AAAEQ,QAAAA;AAAF,OAAS;AAE9B,UAAIa,gBAAgB,GAAG,MAAMnB,iBAAQoB,gBAAR,CAAyB;AAAEd,QAAAA,GAAG,EAAEA;AAAP,OAAzB,EAAsC;AAACH,QAAAA,MAAM,EAAC;AAAR,OAAtC,CAA7B,CAF8B,CAG9B;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AACY,aAAOgB,gBAAP;AACH,KAvBQ;;AA0BT;AACA,UAAME,iBAAN,CAAwBvB,CAAxB,SAA0C;AAAA,UAAf;AAAEQ,QAAAA,GAAF;AAAMP,QAAAA;AAAN,OAAe;AACtC,aAAO,MAAMC,iBAAQsB,iBAAR,CAA0BhB,GAA1B,EAA+BP,KAA/B,EAAsC;AAAEwB,QAAAA,GAAG,EAAE;AAAP,OAAtC,CAAb;AACH;;AA7BQ;AAnBO,CAAjB","sourcesContent":["import Persona from \"../../models/personas/Persona.js\";\n\nexport const PersonaR = {\n    Query: {\n        async personaIglesia(_, { input }) {\n            return await Persona.find({\"codIglesia\":input.codIglesia , estado: { $in: [true, null] }})\n        },\n        async persona(_, { input }) {\n            return await Persona.find({\"_id\":input._id}).limit(1);\n        },\n        async personas() {\n            //return await Persona.find({ \"estado\": input._id });\n            return await Persona.find({ estado: { $in: [true, null] } });\n        },\n        async personasEliminadas() {\n            //return await Persona.find({ \"estado\": input._id });\n            return await Persona.find({ estado: { $in: false } });\n        },\n        async personaCantidad() {\n            return await Persona.count();\n        },\n    }, Mutation: {        \n        //Crear Persona\n        async crearPersona(_, { input }) {\n            console.log(input);\n            const nuevaPersona = new Persona(input);\n            await nuevaPersona.save();\n            return nuevaPersona;\n        },\n\n\n        //Eliminar Persona\n        async eliminarPersona(_, { _id }) {\n\n            var escuelaEliminada = await Persona.findOneAndUpdate({ _id: _id },{estado:false});\n            //return escuelaEliminada;\n/*\n            var personaEliminada = await Persona.updateOne(\n                { _id: _id },\n                { $addToSet: { estado: false } }\n   \n            )\n            */\n            return escuelaEliminada;\n        },\n\n\n        //Actualizar Persona\n        async actualizarPersona(_, { _id,input }) {\n            return await Persona.findByIdAndUpdate(_id, input, { new: true });\n        },\n    }\n\n}\n"],"file":"personaR.js"}