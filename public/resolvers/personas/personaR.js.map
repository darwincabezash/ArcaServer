{"version":3,"sources":["../../../src/resolvers/personas/personaR.js"],"names":["PersonaR","Query","persona","_","input","Persona","find","_id","limit","personas","estado","$in","personasEliminadas","Mutation","crearPersona","console","log","nuevaPersona","save","eliminarPersona","escuelaEliminada","findOneAndUpdate","actualizarPersona","findByIdAndUpdate","new"],"mappings":";;;;;;;;;AAAA;;;;AAEO,MAAMA,QAAQ,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACH,UAAMC,OAAN,CAAcC,CAAd,QAA4B;AAAA,UAAX;AAAEC,QAAAA;AAAF,OAAW;AACxB,aAAO,MAAMC,iBAAQC,IAAR,CAAa;AAAC,eAAMF,KAAK,CAACG;AAAb,OAAb,EAAgCC,KAAhC,CAAsC,CAAtC,CAAb;AACH,KAHE;;AAIH,UAAMC,QAAN,GAAiB;AACb;AACA,aAAO,MAAMJ,iBAAQC,IAAR,CAAa;AAAEI,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,IAAP;AAAP;AAAV,OAAb,CAAb;AACH,KAPE;;AAQH,UAAMC,kBAAN,GAA2B;AACvB;AACA,aAAO,MAAMP,iBAAQC,IAAR,CAAa;AAAEI,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP;AAAV,OAAb,CAAb;AACH;;AAXE,GADa;AAajBE,EAAAA,QAAQ,EAAE;AACT;AACA,UAAMC,YAAN,CAAmBX,CAAnB,SAAiC;AAAA,UAAX;AAAEC,QAAAA;AAAF,OAAW;AAC7BW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,YAAMa,YAAY,GAAG,IAAIZ,gBAAJ,CAAYD,KAAZ,CAArB;AACA,YAAMa,YAAY,CAACC,IAAb,EAAN;AACA,aAAOD,YAAP;AACH,KAPQ;;AAUT;AACA,UAAME,eAAN,CAAsBhB,CAAtB,SAAkC;AAAA,UAAT;AAAEI,QAAAA;AAAF,OAAS;AAE9B,UAAIa,gBAAgB,GAAG,MAAMf,iBAAQgB,gBAAR,CAAyB;AAAEd,QAAAA,GAAG,EAAEA;AAAP,OAAzB,EAAsC;AAACG,QAAAA,MAAM,EAAC;AAAR,OAAtC,CAA7B,CAF8B,CAG9B;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AACY,aAAOU,gBAAP;AACH,KAvBQ;;AA0BT;AACA,UAAME,iBAAN,CAAwBnB,CAAxB,SAA0C;AAAA,UAAf;AAAEI,QAAAA,GAAF;AAAMH,QAAAA;AAAN,OAAe;AACtC,aAAO,MAAMC,iBAAQkB,iBAAR,CAA0BhB,GAA1B,EAA+BH,KAA/B,EAAsC;AAAEoB,QAAAA,GAAG,EAAE;AAAP,OAAtC,CAAb;AACH;;AA7BQ;AAbO,CAAjB","sourcesContent":["import Persona from \"../../models/personas/Persona.js\";\n\nexport const PersonaR = {\n    Query: {\n        async persona(_, { input }) {\n            return await Persona.find({\"_id\":input._id}).limit(1);\n        },\n        async personas() {\n            //return await Persona.find({ \"estado\": input._id });\n            return await Persona.find({ estado: { $in: [true, null] } });\n        },\n        async personasEliminadas() {\n            //return await Persona.find({ \"estado\": input._id });\n            return await Persona.find({ estado: { $in: false } });\n        }\n    }, Mutation: {        \n        //Crear Persona\n        async crearPersona(_, { input }) {\n            console.log(input);\n            const nuevaPersona = new Persona(input);\n            await nuevaPersona.save();\n            return nuevaPersona;\n        },\n\n\n        //Eliminar Persona\n        async eliminarPersona(_, { _id }) {\n\n            var escuelaEliminada = await Persona.findOneAndUpdate({ _id: _id },{estado:false});\n            //return escuelaEliminada;\n/*\n            var personaEliminada = await Persona.updateOne(\n                { _id: _id },\n                { $addToSet: { estado: false } }\n   \n            )\n            */\n            return escuelaEliminada;\n        },\n\n\n        //Actualizar Persona\n        async actualizarPersona(_, { _id,input }) {\n            return await Persona.findByIdAndUpdate(_id, input, { new: true });\n        },\n    }\n\n}\n"],"file":"personaR.js"}