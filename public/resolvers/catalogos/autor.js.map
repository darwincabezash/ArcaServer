{"version":3,"sources":["../../../src/resolvers/catalogos/autor.js"],"names":["AutorLibroW","Query","libro","Libro","find","autor","resultado","Autor","aggregate","$lookup","from","localField","foreignField","as","console","log","Mutation","createAutor","_","input","newProduct","save","error","message","createLibro"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAEO,MAAMA,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAAE;AACH,UAAMC,KAAN,GAAc;AACV,aAAO,MAAMC,eAAMC,IAAN,EAAb;AACH,KAHE;;AAIH,UAAMC,KAAN,GAAc;AACV;AAEA;AAEA,YAAMC,SAAS,GAAG,MAAMC,eAAMC,SAAN,CACpB,CACI;AACIC,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAE,QADD;AACY;AACjBC,UAAAA,UAAU,EAAE,QAFP;AAEmB;AACxBC,UAAAA,YAAY,EAAE,KAHT;AAGmB;AACxBC,UAAAA,EAAE,EAAC,aAJE,CAIe;;AAJf;AADb,OADJ,CADoB,CAAxB;AAaAC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAlBU,CAmBV;;AACA,aAAOT,SAAP;AACH;;AAzBE,GADgB;AA4BpBU,EAAAA,QAAQ,EAAE;AACT;AACA,UAAMC,WAAN,CAAkBC,CAAlB,QAAgC;AAAA,UAAX;AAAEC,QAAAA;AAAF,OAAW;;AAC5B,UAAI;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,cAAMC,UAAU,GAAG,MAAM,oBAAMD,KAAN,CAAzB;AACA,cAAMC,UAAU,CAACC,IAAX,EAAN;AACA,eAAOD,UAAP;AACH,OALD,CAKE,OAAOE,KAAP,EAAc;AACZR,QAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAK,CAACC,OAApB;AACH;AACJ,KAXQ;;AAYhB;AACO,UAAMC,WAAN,CAAkBN,CAAlB,SAAgC;AAAA,UAAX;AAAEC,QAAAA;AAAF,OAAW;;AAC5B,UAAI;AACA,cAAMC,UAAU,GAAG,MAAM,oBAAMD,KAAN,CAAzB;AACA,cAAMC,UAAU,CAACC,IAAX,EAAN;AACA,eAAOD,UAAP;AACH,OAJD,CAIE,OAAOE,KAAP,EAAc;AACZR,QAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAK,CAACC,OAApB;AACH;AACJ;;AArBQ;AA5BU,CAApB","sourcesContent":["import Autor from \"../../models/configuraciones/catalogos/Autor.js\"\nimport Libro from \"../../models/configuraciones/catalogos/Libro\"\n\nexport const AutorLibroW = {\n    Query: {\n        async libro() {\n            return await Libro.find();\n        },\n        async autor() {\n            //return await Person.find().populate('story').exec();\n\n            //return await Autor.find();\n\n            const resultado = await Autor.aggregate(\n                [\n                    {\n                        $lookup: {\n                            from: \"libros\",  //COLECCION : poner el nombre de la coleccion de la base\n                            localField: \"libros\",   //CAMPO LOCAL   \n                            foreignField: \"_id\",    //CAMPO FORANEO\n                            as:\"AutorLibros\"    //ALIAS\n                        }\n                    }\n                ]\n            )\n\n            console.log(\"********* RESULTADO *********\");\n            //console.log(JSON.stringify(resultado) );\n            return resultado;\n        }\n        \n    }, Mutation: {        \n        //Crear Escuela\n        async createAutor(_, { input }) {\n            try {\n                console.log(input);\n                const newProduct = await Autor(input);\n                await newProduct.save()\n                return newProduct;\n            } catch (error) {\n                console.error(error.message)\n            }\n        },\n //Crear Escuela createAutor\n        async createLibro(_, { input }) {\n            try {\n                const newProduct = await Libro(input);\n                await newProduct.save()\n                return newProduct;\n            } catch (error) {\n                console.error(error.message)\n            }\n        },\n    }\n\n}\n"],"file":"autor.js"}